"""
Django settings for freshday project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

# os.path.abspath获得绝对路径
# os.path.dirname 返回文件路径
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# Celery settings

# CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'  # 使用redis 作为代理
CELERY_BROKER_URL = 'redis://192.168.3.5:6379/0'
#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_ACCEPT_CONTENT = ['json']
# CELERY_RESULT_BACKEND = ':redis://localhost:6379/0'  # 使用redis 作为结果后端
CELERY_RESULT_BACKEND = 'django-cache'
CELERY_TASK_SERIALIZER = 'json'

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e5cmo(1t+&p@u8j778(@nrax0k4=*plp&w)w4_1#^fed6dkg+p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'goods_fd.apps.GoodsConfig',
    'user_fd.apps.UserConfig',
    'order_fd.apps.OrderConfig',
    'shopcart.apps.ShopcartConfig',
    'tinymce',  # 富文本编辑模块
    'django_celery_results',  # 使用 Django ORM / Cache 作为结果后端
    'haystack',               # 安装django-haystack 全文检索框架
    'tem',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'freshday.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'freshday.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'df',
        'USER': 'root',
        'PASSWORD': '123',
        'HOST': '192.168.3.5',
        # 'HOST': '127.0.0.1',
        'PORT': '3306'
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
# 应用目录之外的static以及其他静态文件目录需要设置STATICFILES_DIRS
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
# django-tinymce 配置 参考
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advance',
    'width': 600,
    'height': 400,
}

AUTH_USER_MODEL = 'user_fd.User'  # erro E304ValueError: Invalid model reference 'user_fd.models.User'. String model references must be of the form 'app_label.ModelName'.
#  继承管理用户模型，在创建表的时候会生成auth_user 表，继承的类会默认生成这个表会产生错误
# AUTG_USER_MODEL 替换表明，区分管理员用户


# 发送邮件配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# smtp服务器地址，在邮箱中查看
EMAIL_HOST = 'smtp.qq.com'
# smtp端口
EMAIL_PORT = 25
# 发送邮件的邮箱pat201978@163.com'
EMAIL_HOST_USER = '995010997@qq.com'
# 在邮箱中设置的客户端授权密码  QQ xmmafvuvvboybecj  163 pat123456
EMAIL_HOST_PASSWORD = 'xmmafvuvvboybecj'
# 收件人看到的发件人
EMAIL_FROM = '自定义内容<995010997@qq.com>'

# django 使用redis 作为缓存
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.3.5:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# django 使用redis 作为session
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# 配置URL登陆地址
LOGIN_URL = "/user/login"

# 使用自定义文件存储类
DEFAULT_FILE_STORAGE = 'utilssss.fdfs.storage.FDFSStorage'
# 设置fdfs使用的client.conf文件路径
FDFS_CLIENT_CONF = './utilssss/fdfs/client.conf'
# 设置fdfs存储服务器上的nginxdeIP和端口号
FDFS_URL = 'http://192.168.3.5:8888/'

# django-haystack 配置
HAYSTACK_CONNECTIONS = {
    'default': {
        # 'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',           # #使用whoosh引擎
        # 'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),     #索引文件路径
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    },
}

# 当添加、修改、删除数据时，自动生成索引
# HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
